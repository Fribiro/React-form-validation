{"version":3,"sources":["component/user-form.component.js","App.js","reportWebVitals.js","index.js"],"names":["regExp","RegExp","UserForm","props","onSubmit","e","preventDefault","isError","rest","isValid","Object","values","forEach","val","length","formValid","state","console","log","formValChange","target","name","value","email","test","password","setState","this","noValidate","className","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAEMA,EAASC,OACX,0CAwBiBC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAeVC,SAAW,SAAAC,GACPA,EAAEC,kBAzCQ,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAYC,EAAW,2BACpCC,GAAU,EAkBd,OAhBAC,OAAOC,OAAOJ,GAASK,SAAQ,SAAAC,GAEvBJ,IADAI,EAAIC,OAAS,MAOrBJ,OAAOC,OAAOH,GAAMI,SAAQ,SAAAC,GAEpBJ,EADQ,OAARI,KAODJ,EAwBCM,CAAU,EAAKC,OAGfC,QAAQC,IAAI,oBAFZD,QAAQC,IAAI,EAAKF,QApBN,EA2BnBG,cAAgB,SAAAd,GACZA,EAAEC,iBADe,MAEOD,EAAEe,OAAlBC,EAFS,EAETA,KAAMC,EAFG,EAEHA,MACVf,EAAO,eAAQ,EAAKS,MAAMT,SAE9B,OAAQc,GACJ,IAAK,OACDd,EAAQc,KACJC,EAAMR,OAAS,EAAI,iCAAmC,GAC1D,MACJ,IAAK,QACDP,EAAQgB,MAAQvB,EAAOwB,KAAKF,GACtB,GACA,2BACN,MACJ,IAAK,WACDf,EAAQkB,SACJH,EAAMR,OAAS,EAAI,iCAAmC,GAMlE,EAAKY,SAAL,aACInB,WACCc,EAAOC,KAjDZ,EAAKN,MAAQ,CACTK,KAAM,GACNE,MAAO,GACPE,SAAU,GACVlB,QAAS,CACLc,KAAM,GACNE,MAAO,GACPE,SAAU,KAVH,E,qDAwDT,IAEElB,EAAYoB,KAAKX,MAAjBT,QACR,OACK,uBAAMH,SAAUuB,KAAKvB,SAAUwB,YAAU,EAAzC,UACG,sBAAKC,UAAU,aAAf,UACI,yCACA,uBACIC,KAAK,OACLD,UAAWtB,EAAQc,KAAKP,OAAS,EAAI,0BAA4B,eACjEO,KAAK,OACLU,SAAUJ,KAAKR,gBAElBZ,EAAQc,KAAKP,OAAS,GACnB,sBAAMe,UAAU,mBAAhB,SAAoCtB,EAAQc,UAIpD,sBAAKQ,UAAU,aAAf,UACI,0CACA,uBACIC,KAAK,QACLD,UAAWtB,EAAQgB,MAAMT,OAAS,EAAI,0BAA4B,eAClEO,KAAK,QACLU,SAAUJ,KAAKR,gBAElBZ,EAAQgB,MAAMT,OAAS,GACpB,sBAAMe,UAAU,mBAAhB,SAAoCtB,EAAQgB,WAIpD,sBAAKM,UAAU,aAAf,UACI,6CACA,uBACIC,KAAK,WACLD,UAAWtB,EAAQkB,SAASX,OAAS,EAAI,0BAA4B,eACrEO,KAAK,WACLU,SAAUJ,KAAKR,gBAElBZ,EAAQkB,SAASX,OAAS,GACvB,sBAAMe,UAAU,mBAAhB,SAAoCtB,EAAQkB,cAIpD,wBAAQK,KAAK,SAASD,UAAU,2BAAhC,gC,GAtGsBG,aCbvBC,MATf,WACE,OACE,qBAAKJ,UAAU,YAAf,SACE,cAAC,EAAD,OCISK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff909e88.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst regExp = RegExp(\n    /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/\n)\nconst formValid = ({ isError, ...rest }) => {\n    let isValid = false;\n\n    Object.values(isError).forEach(val => {\n        if (val.length > 0) {\n            isValid = false\n        } else {\n            isValid = true\n        }\n    });\n\n    Object.values(rest).forEach(val => {\n        if (val === null) {\n            isValid = false\n        } else {\n            isValid = true\n        }\n    });\n\n    return isValid;\n};\n\nexport default class UserForm extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            isError: {\n                name: '',\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state)) {\n            console.log(this.state)\n        } else {\n            console.log(\"Form is invalid!\");\n        }\n    };\n\n\n    formValChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let isError = { ...this.state.isError };\n\n        switch (name) {\n            case \"name\":\n                isError.name =\n                    value.length < 4 ? \"Atleast 4 characaters required\" : \"\";\n                break;\n            case \"email\":\n                isError.email = regExp.test(value)\n                    ? \"\"\n                    : \"Email address is invalid\";\n                break;\n            case \"password\":\n                isError.password =\n                    value.length < 6 ? \"Atleast 6 characaters required\" : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({\n            isError,\n            [name]: value\n        })\n    };\n\n    render() {\n\n        const { isError } = this.state;\n        return (\n             <form onSubmit={this.onSubmit} noValidate>\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        className={isError.name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\n                        name=\"name\"\n                        onChange={this.formValChange}\n                    />\n                    {isError.name.length > 0 && (\n                        <span className=\"invalid-feedback\">{isError.name}</span>\n                    )}\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email</label>\n                    <input\n                        type=\"email\"\n                        className={isError.email.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\n                        name=\"email\"\n                        onChange={this.formValChange}\n                    />\n                    {isError.email.length > 0 && (\n                        <span className=\"invalid-feedback\">{isError.email}</span>\n                    )}\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        className={isError.password.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\n                        name=\"password\"\n                        onChange={this.formValChange}\n                    />\n                    {isError.password.length > 0 && (\n                        <span className=\"invalid-feedback\">{isError.password}</span>\n                    )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-block btn-danger\">Create User</button>\n            </form>\n        );\n    }\n}\n\n","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport UserForm from './component/user-form.component';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <UserForm />\n    </div>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}